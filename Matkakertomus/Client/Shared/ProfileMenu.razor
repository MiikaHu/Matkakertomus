@inject StateContainer State
@inject AuthenticationStateProvider AuthStateProvider
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage




@CreateRenderFragment


@code {


	private RenderFragment CreateRenderFragment =>
	@<text>
		<MudMenuItem Href="/profile">
		<MudStack AlignItems="AlignItems.Center">
			<MudImage Src="@BytesToBase64Image(State?.User?.Image)" Height="80">
			</MudImage>
			<MudText>@State?.User?.Username</MudText>
		</MudStack>
		</MudMenuItem>
	     <MudMenuItem OnClick="LogOut" IconSize="Size.Small" IconColor="Color.Dark" Icon="@Icons.Material.Filled.Logout">Kirjaudu ulos</MudMenuItem>
	</text>;



	private string BytesToBase64Image(byte[]? bytes) => bytes is null ? "" : $"data:image/png;base64,{Convert.ToBase64String(bytes)}";

	private async Task LogOut()
	{
		await LocalStorage.RemoveItemAsync("token");
		await AuthStateProvider.GetAuthenticationStateAsync();
		NavigationManager.NavigateTo("/");
	}
}
